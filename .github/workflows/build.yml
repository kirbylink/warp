name: Build warp-runner and warp-packer

on:
  workflow_dispatch:

jobs:
  build-runner:
    name: Build warp-runner for ${{ matrix.name }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - name: linux-x64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-musl
            ext: ""
          - name: linux-aarch64
            runner: ubuntu-24.04-arm
            target: aarch64-unknown-linux-musl
            ext: ""
          - name: windows-x64
            runner: windows-latest
            target: ""
            ext: ".exe"
          - name: windows-aarch64
            runner: windows-11-arm
            target: ""
            ext: ".exe"
          - name: macos-x64
            runner: macos-13
            target: ""
            ext: ""
          - name: macos-aarch64
            runner: macos-latest
            target: ""
            ext: ""
    steps:
      - uses: actions/checkout@v4
      - name: Remove local cargo config (CI workaround)
        run: rm -f .cargo/config.toml
      - name: Install target (if needed)
        if: matrix.target != ''
        run: rustup target add ${{ matrix.target }}
      - name: Build warp-runner
        run: |
          cd warp-runner
          cargo build --release ${{ matrix.target && format('--target {}', matrix.target) }}
      - name: Copy output binary
        run: |
          mkdir -p out
          cp warp-runner/${{ matrix.target && format('target/{}/', matrix.target) || 'target/' }}release/warp-runner${{ matrix.ext }} out/${{ matrix.name }}-warp-runner${{ matrix.ext }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-warp-runner
          path: out/${{ matrix.name }}-warp-runner${{ matrix.ext }}

  build-packer:
    name: Build warp-packer for ${{ matrix.name }}
    needs: build-runner
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - name: linux-x64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-musl
            ext: ""
          - name: linux-aarch64
            runner: ubuntu-24.04-arm
            target: aarch64-unknown-linux-musl
            ext: ""
          - name: windows-x64
            runner: windows-latest
            target: ""
            ext: ".exe"
          - name: windows-aarch64
            runner: windows-11-arm
            target: ""
            ext: ".exe"
          - name: macos-x64
            runner: macos-13
            target: ""
            ext: ""
          - name: macos-aarch64
            runner: macos-latest
            target: ""
            ext: ""
    steps:
      - uses: actions/checkout@v4
      - name: Remove local cargo config (CI workaround)
        run: rm -f .cargo/config.toml
      - name: Download all runner artifacts
        uses: actions/download-artifact@v4
        with:
          path: runners/
      - name: Copy required runner binary
        run: |
          mkdir -p target/release
          cp runners/${{ matrix.name }}-warp-runner/${{ matrix.name }}-warp-runner${{ matrix.ext }} target/release/warp-runner${{ matrix.ext }}
      - name: Install target (if needed)
        if: matrix.target != ''
        run: rustup target add ${{ matrix.target }}
      - name: Build warp-packer
        run: |
          cargo build --release ${{ matrix.target && format('--target {}', matrix.target) }}
      - name: Copy warp-packer binary to artifact
        run: |
          mkdir -p dist
          cp target/${{ matrix.target && format('{}/', matrix.target) || '' }}release/warp-packer${{ matrix.ext }} dist/${{ matrix.name }}.warp-packer${{ matrix.ext }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}.warp-packer
          path: dist/${{ matrix.name }}.warp-packer${{ matrix.ext }}
